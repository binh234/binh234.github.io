{"version":3,"file":"component---src-pages-archive-js-7cd21845dfa88a962cbe.js","mappings":"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","sources":["webpack://v2/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport sr from \"@utils/sr\";\nimport { srConfig } from \"@config\";\nimport { Layout } from \"@components\";\nimport { FormattedIcon } from \"@components/icons\";\nimport styled from \"styled-components\";\nimport { theme, mixins, media, Main } from \"@styles\";\nconst { colors, fonts, fontSizes } = theme;\n\nconst StyledMainContainer = styled(Main)``;\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n  ${media.tablet`\n    margin: 100px -10px;\n  `};\n`;\nconst StyledTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n\n  .hide-on-mobile {\n    ${media.tablet`\n      display: none;\n    `};\n  }\n\n  tbody tr {\n    transition: ${theme.transition};\n\n    &:hover,\n    &:focus {\n      background-color: ${colors.lightNavy};\n    }\n  }\n  th,\n  td {\n    cursor: default;\n    line-height: 1.5;\n    padding: 10px 20px;\n    ${media.tablet`\n      padding: 10px;\n    `};\n  }\n  th {\n    text-align: left;\n  }\n  td {\n    &.year {\n      width: 10%;\n      ${media.tablet`\n        font-size: ${fontSizes.sm};\n      `};\n    }\n    &.title {\n      padding-top: 15px;\n      color: ${colors.lightestSlate};\n      font-size: ${fontSizes.xl};\n      font-weight: 700;\n    }\n    &.company {\n      width: 15%;\n      padding-top: 15px;\n      font-size: ${fontSizes.lg};\n    }\n    &.tech {\n      font-size: ${fontSizes.xs};\n      font-family: ${fonts.SFMono};\n      .separator {\n        margin: 0 5px;\n      }\n      span {\n        display: inline-block;\n      }\n    }\n    &.links {\n      span {\n        display: flex;\n        align-items: center;\n        a {\n          ${mixins.flexCenter};\n        }\n        a + a {\n          margin-left: 10px;\n        }\n        svg {\n          width: 20px;\n          height: 20px;\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => (\n  <>\n    <title>Archive | Binh Le</title>\n    <link rel=\"canonical\" href=\"https://binh234.github.io/archive\" />\n  </>\n);\n\nconst ArchivePage = ({ location, data }) => {\n  const projects = data.allMarkdownRemark.edges;\n\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n  useEffect(() => {\n    sr.reveal(revealTitle.current, srConfig());\n    sr.reveal(revealTable.current, srConfig());\n    revealProjects.current.forEach((ref, i) =>\n      sr.reveal(ref, srConfig(i * 10))\n    );\n  }, []);\n\n  return (\n    <Layout location={location}>\n      <StyledMainContainer>\n        <header ref={revealTitle}>\n          <h1 className=\"big-title\">Archive</h1>\n          <p className=\"subtitle\">A big list of things I’ve worked on</p>\n        </header>\n\n        <StyledTableContainer ref={revealTable}>\n          <StyledTable>\n            <thead>\n              <tr>\n                <th>Year</th>\n                <th>Title</th>\n                <th className=\"hide-on-mobile\">Made at</th>\n                <th className=\"hide-on-mobile\">Built with</th>\n                <th>Link</th>\n              </tr>\n            </thead>\n            <tbody>\n              {projects.length > 0 &&\n                projects.map(({ node }, i) => {\n                  const { date, github, external, title, tech, company } =\n                    node.frontmatter;\n                  return (\n                    <tr key={i} ref={(el) => (revealProjects.current[i] = el)}>\n                      <td className=\"overline year\">{`${new Date(\n                        date\n                      ).getFullYear()}`}</td>\n\n                      <td className=\"title\">{title}</td>\n\n                      <td className=\"company hide-on-mobile\">\n                        {company ? <span>{company}</span> : <span>—</span>}\n                      </td>\n\n                      <td className=\"tech hide-on-mobile\">\n                        {tech.length > 0 &&\n                          tech.map((item, i) => (\n                            <span key={i}>\n                              {item}\n                              {\"\"}\n                              {i !== tech.length - 1 && (\n                                <span className=\"separator\">&middot;</span>\n                              )}\n                            </span>\n                          ))}\n                      </td>\n\n                      <td className=\"links\">\n                        <span>\n                          {external && (\n                            <a\n                              href={external}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"External Link\"\n                            >\n                              <FormattedIcon name=\"External\" />\n                            </a>\n                          )}\n                          {github && (\n                            <a\n                              href={github}\n                              target=\"_blank\"\n                              rel=\"nofollow noopener noreferrer\"\n                              aria-label=\"GitHub Link\"\n                            >\n                              <FormattedIcon name=\"GitHub\" />\n                            </a>\n                          )}\n                        </span>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </StyledTable>\n        </StyledTableContainer>\n      </StyledMainContainer>\n    </Layout>\n  );\n};\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            tech\n            github\n            external\n            company\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["colors","fonts","fontSizes","theme","StyledMainContainer","styled","Main","withConfig","displayName","componentId","StyledTableContainer","media","_templateObject","_taggedTemplateLiteralLoose","StyledTable","_templateObject2","lightNavy","_templateObject3","_templateObject4","sm","lightestSlate","xl","lg","xs","SFMono","mixins","Head","React","rel","href","_ref","location","data","projects","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","useEffect","sr","current","srConfig","forEach","ref","i","Layout","className","length","map","_ref2","node","date","github","external","title","tech","company","frontmatter","key","el","Date","getFullYear","item","target","FormattedIcon","name"],"sourceRoot":""}